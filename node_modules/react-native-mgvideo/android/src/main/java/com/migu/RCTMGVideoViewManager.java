package com.migu;

import android.util.Log;

import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.uimanager.SimpleViewManager;
import com.facebook.react.uimanager.ThemedReactContext;
import com.facebook.react.uimanager.annotations.ReactProp;
import com.facebook.react.uimanager.UIManagerModule;
import com.facebook.react.uimanager.events.EventDispatcher;
import com.facebook.react.common.MapBuilder;

import android.text.TextUtils;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import com.miguplayer.player.view.MGVideoView;
import com.miguplayer.player.view.IMediaController;
import com.miguplayer.player.IMGPlayer;
import com.miguplayer.player.IMGPlayerListener;
import java.util.Map;
import javax.annotation.Nullable;
/**
 * Created by Administrator on 2016/4/25.
 */
public class RCTMGVideoViewManager extends SimpleViewManager<MGVideoView> {
    public static final String TAG = "ReactNativeJS";
    public static final String REACT_CLASS = "RCTMGVideo";

    public static final String PROP_VIDEOPATH = "videoPath";
    public static final String PROP_STOPPED = "stopped";

    @Override
    public String getName() {
        return REACT_CLASS;
    }

    @Override
    protected MGVideoView createViewInstance(ThemedReactContext reactContext) {
        SharedPreferences sharedPrefs = reactContext.getSharedPreferences("login", 0);
        Editor editor = sharedPrefs.edit();
        editor.putString("user_name", "wangda");
        editor.putString("user_sn", "103");
        editor.commit();

        EventDispatcher eventDispatcher = reactContext.getNativeModule(UIManagerModule.class).getEventDispatcher();

        MGControllerView mediaController = new MGControllerView(reactContext, false);
        MGVideoView videoView = new MGVideoView(reactContext);
        videoView.setMediaController(mediaController);
        videoView.registerListener(new MGPlayerListener(videoView, eventDispatcher, mediaController));
        return videoView;
    }

    @Override
  public Map getExportedCustomDirectEventTypeConstants() {
    return MapBuilder.of(
        MGPlayerPreparedEvent.EVENT_NAME, MapBuilder.of("registrationName", "onPrepared")
    );
  }

    @ReactProp(name = PROP_VIDEOPATH)
    public void setVideoPath(final MGVideoView videoView, final String videoPath) {
        if (!TextUtils.isEmpty(videoPath)) {
            videoView.setVideoPath(videoPath);
            videoView.start();
        }
    }
    
    @ReactProp(name = PROP_STOPPED, defaultBoolean = false)
    public void setStopped(final MGVideoView videoView, final boolean stopped) {
        videoView.stopPlayback();
    }
}
